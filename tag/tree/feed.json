{
    "version": "https://jsonfeed.org/version/1",
    "title": "KAIIAK • All posts by \"tree\" tag",
    "description": null,
    "home_page_url": "https://blog.iakmai.com",
    "items": [
        {
            "id": "https://blog.iakmai.com/2016/03/27/tree_command_source_code_analyze/",
            "url": "https://blog.iakmai.com/2016/03/27/tree_command_source_code_analyze/",
            "title": "tree命令源码分析",
            "date_published": "2016-03-27T09:30:30.000Z",
            "content_html": "<h1 id=\"为什么选择tree这个命令？\"><a href=\"#为什么选择tree这个命令？\" class=\"headerlink\" title=\"为什么选择tree这个命令？\"></a>为什么选择tree这个命令？</h1><p>学完APUE的前几章，学完了IO和文件与目录，我们可以做点东西出来了。而借鉴别人的程序就是做出东西的选择之一。</p>\n<h1 id=\"如何下载源代码\"><a href=\"#如何下载源代码\" class=\"headerlink\" title=\"如何下载源代码\"></a>如何下载源代码</h1><p><a href=\"http://mama.indstate.edu/users/ice/tree/src/tree-1.7.0.tgz]\" target=\"_blank\" rel=\"noopener\">http://mama.indstate.edu/users/ice/tree/src/tree-1.7.0.tgz</a>这个链接可以下载到最新的tree源代码，也可以编译成功。</p>\n<h1 id=\"怎么分析源代码\"><a href=\"#怎么分析源代码\" class=\"headerlink\" title=\"怎么分析源代码\"></a>怎么分析源代码</h1><p>这是个很大的问题，暂时我还没有太多的经验 :(</p>\n<h1 id=\"我们的目的\"><a href=\"#我们的目的\" class=\"headerlink\" title=\"我们的目的\"></a>我们的目的</h1><p>我们的目的暂时定为搞懂如何遍历所有的目录，并输出。</p>\n<h1 id=\"各部分的作用\"><a href=\"#各部分的作用\" class=\"headerlink\" title=\"各部分的作用\"></a>各部分的作用</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tree-1.7.0</span><br><span class=\"line\">├── color.c</span><br><span class=\"line\">├── hash.c</span><br><span class=\"line\">├── html.c</span><br><span class=\"line\">├── INSTALL</span><br><span class=\"line\">├── json.c</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── Makefile</span><br><span class=\"line\">├── strverscmp.c</span><br><span class=\"line\">├── tree.c</span><br><span class=\"line\">├── tree.h</span><br><span class=\"line\">├── unix.c</span><br><span class=\"line\">└── xml.c</span><br></pre></td></tr></table></figure>\n<p>核心的就是这几个文件。其中<code>unix.c</code>和<code>tree.c</code>是遍历功能的主要函数的所在地。</p>\n<h2 id=\"Makefile\"><a href=\"#Makefile\" class=\"headerlink\" title=\"Makefile\"></a>Makefile</h2><figure class=\"highlight mk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prefix = /usr</span><br><span class=\"line\"></span><br><span class=\"line\">CC=gcc</span><br><span class=\"line\"></span><br><span class=\"line\">VERSION=1.7.0</span><br><span class=\"line\">TREE_DEST=tree</span><br><span class=\"line\">BINDIR=$&#123;prefix&#125;/bin</span><br><span class=\"line\">MAN=tree.1</span><br><span class=\"line\">MANDIR=$&#123;prefix&#125;/man/man1</span><br><span class=\"line\">OBJS=tree.o unix.o html.o xml.o json.o hash.o color.o</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment options below for your particular OS:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Linux defaults:</span></span><br><span class=\"line\">CFLAGS=-ggdb -Wall -DLINUX -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64</span><br><span class=\"line\"><span class=\"comment\">#CFLAGS=-O4 -Wall  -DLINUX -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64</span></span><br><span class=\"line\"><span class=\"comment\">#LDFLAGS=-s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">all:    tree</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">tree:   <span class=\"variable\">$(OBJS)</span></span></span><br><span class=\"line\">    <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(LDFLAGS)</span> -o <span class=\"variable\">$(TREE_DEST)</span> <span class=\"variable\">$(OBJS)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$(OBJS)</span>: %.o:   %.c tree.h</span><br><span class=\"line\">    <span class=\"variable\">$(CC)</span> <span class=\"variable\">$(CFLAGS)</span> -c -o <span class=\"variable\">$@</span> <span class=\"variable\">$&lt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">clean:</span></span><br><span class=\"line\">    if [ -x <span class=\"variable\">$(TREE_DEST)</span> ]; then rm <span class=\"variable\">$(TREE_DEST)</span>; fi</span><br><span class=\"line\">    if [ -f tree.o ]; then rm *.o; fi</span><br><span class=\"line\">    rm -f *~</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">install: tree</span></span><br><span class=\"line\">    install -d <span class=\"variable\">$(BINDIR)</span></span><br><span class=\"line\">    install -d <span class=\"variable\">$(MANDIR)</span></span><br><span class=\"line\">    if [ -e <span class=\"variable\">$(TREE_DEST)</span> ]; then \\</span><br><span class=\"line\">        install <span class=\"variable\">$(TREE_DEST)</span> <span class=\"variable\">$(BINDIR)</span>/<span class=\"variable\">$(TREE_DEST)</span>; \\</span><br><span class=\"line\">    fi</span><br><span class=\"line\">    install doc/<span class=\"variable\">$(MAN)</span> <span class=\"variable\">$(MANDIR)</span>/<span class=\"variable\">$(MAN)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">distclean:</span></span><br><span class=\"line\">    if [ -f tree.o ]; then rm *.o; fi</span><br><span class=\"line\">    rm -f *~</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">dist:   distclean</span></span><br><span class=\"line\">    tar zcf ../tree-<span class=\"variable\">$(VERSION)</span>.tgz -C .. `cat .tarball`</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"核心程序-遍历目录\"><a href=\"#核心程序-遍历目录\" class=\"headerlink\" title=\"核心程序-遍历目录\"></a>核心程序-遍历目录</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//存储文件和文件夹信息的结构体</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">info</span> &#123;</span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> *name;   /</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *lnk;</span><br><span class=\"line\">  <span class=\"keyword\">bool</span> isdir;</span><br><span class=\"line\">  <span class=\"keyword\">bool</span> issok;</span><br><span class=\"line\">  <span class=\"keyword\">bool</span> isfifo;</span><br><span class=\"line\">  <span class=\"keyword\">bool</span> isexe;</span><br><span class=\"line\">  <span class=\"keyword\">bool</span> orphan;</span><br><span class=\"line\">  <span class=\"keyword\">mode_t</span> mode, lnkmode;</span><br><span class=\"line\">  <span class=\"keyword\">uid_t</span> uid;</span><br><span class=\"line\">  <span class=\"keyword\">gid_t</span> gid;</span><br><span class=\"line\">  <span class=\"keyword\">off_t</span> <span class=\"built_in\">size</span>;</span><br><span class=\"line\">  <span class=\"keyword\">time_t</span> atime, ctime, mtime;</span><br><span class=\"line\">  <span class=\"keyword\">dev_t</span> dev;</span><br><span class=\"line\">  <span class=\"keyword\">ino_t</span> inode;</span><br><span class=\"line\">  <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __EMX__</span></span><br><span class=\"line\">  <span class=\"keyword\">long</span> attr;</span><br><span class=\"line\">  <span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">  <span class=\"keyword\">char</span> *err;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">info</span> **<span class=\"title\">child</span>;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">off_t</span> <span class=\"title\">unix_listdir</span><span class=\"params\">(<span class=\"keyword\">char</span> *d, <span class=\"keyword\">int</span> *dt, <span class=\"keyword\">int</span> *ft, u_long lev, <span class=\"keyword\">dev_t</span> dev)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *path;</span><br><span class=\"line\">  <span class=\"keyword\">bool</span> nlf = FALSE, colored = FALSE;</span><br><span class=\"line\">  <span class=\"keyword\">long</span> pathsize = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">info</span> **<span class=\"title\">dir</span>, **<span class=\"title\">sav</span>;</span></span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">stat</span> <span class=\"title\">sb</span>;</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> n, c;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> ((Level &gt;= <span class=\"number\">0</span>) &amp;&amp; (lev &gt; Level)) &#123;</span><br><span class=\"line\">    fputc(<span class=\"string\">'\\n'</span>,outfile);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (xdev &amp;&amp; lev == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    stat(d,&amp;sb);</span><br><span class=\"line\">    dev = sb.st_dev;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  sav = dir = read_dir(d,&amp;n);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!dir &amp;&amp; n) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\" [error opening dir]\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!n) &#123;</span><br><span class=\"line\">    fputc(<span class=\"string\">'\\n'</span>, outfile);</span><br><span class=\"line\">    free_dir(sav);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (flimit &gt; <span class=\"number\">0</span> &amp;&amp; n &gt; flimit) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\" [%d entries exceeds filelimit, not opening dir]\\n\"</span>,n);</span><br><span class=\"line\">    free_dir(sav);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (cmpfunc) qsort(dir,n,<span class=\"keyword\">sizeof</span>(struct _info *), cmpfunc);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (lev &gt;= maxdirs<span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    dirs = xrealloc(dirs,<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (maxdirs += <span class=\"number\">1024</span>));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dirs+(maxdirs<span class=\"number\">-1024</span>), <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * <span class=\"number\">1024</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  dirs[lev] = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!*(dir+<span class=\"number\">1</span>)) dirs[lev] = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  path = <span class=\"built_in\">malloc</span>(pathsize=<span class=\"number\">4096</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">while</span>(*dir) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!noindent) indent(lev);</span><br><span class=\"line\"></span><br><span class=\"line\">    fillinfo(path,*dir);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (path[<span class=\"number\">0</span>] == <span class=\"string\">' '</span>) &#123;</span><br><span class=\"line\">      path[<span class=\"number\">0</span>] = <span class=\"string\">'['</span>;</span><br><span class=\"line\">      <span class=\"built_in\">fprintf</span>(outfile, <span class=\"string\">\"%s]  \"</span>,path);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (colorize) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((*dir)-&gt;lnk &amp;&amp; linktargetcolor) colored = color((*dir)-&gt;lnkmode,(*dir)-&gt;name,(*dir)-&gt;orphan,FALSE);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> colored = color((*dir)-&gt;mode,(*dir)-&gt;name,(*dir)-&gt;orphan,FALSE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fflag) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">2</span>) &gt; pathsize)</span><br><span class=\"line\">    path=xrealloc(path,pathsize=(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1024</span>)));</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"built_in\">strcmp</span>(d,<span class=\"string\">\"/\"</span>)) <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s/%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1</span>) &gt; pathsize)</span><br><span class=\"line\">    path=xrealloc(path,pathsize=(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1024</span>)));</span><br><span class=\"line\">      <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s\"</span>,(*dir)-&gt;name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    printit(path);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (colored) <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"%s\"</span>,endcode);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Fflag &amp;&amp; !(*dir)-&gt;lnk) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((c = Ftype((*dir)-&gt;mode))) fputc(c, outfile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((*dir)-&gt;lnk) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\" -&gt; \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (colorize) colored = color((*dir)-&gt;lnkmode,(*dir)-&gt;lnk,(*dir)-&gt;orphan,TRUE);</span><br><span class=\"line\">      printit((*dir)-&gt;lnk);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (colored) <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"%s\"</span>,endcode);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (Fflag) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((c = Ftype((*dir)-&gt;lnkmode))) fputc(c, outfile);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((*dir)-&gt;isdir) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((*dir)-&gt;lnk) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (lflag &amp;&amp; !(xdev &amp;&amp; dev != (*dir)-&gt;dev)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (findino((*dir)-&gt;inode,(*dir)-&gt;dev)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"  [recursive, not followed]\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        saveino((*dir)-&gt;inode, (*dir)-&gt;dev);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (*(*dir)-&gt;lnk == <span class=\"string\">'/'</span>)</span><br><span class=\"line\">          listdir((*dir)-&gt;lnk,dt,ft,lev+<span class=\"number\">1</span>,dev);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;lnk)+<span class=\"number\">2</span> &gt; pathsize) path=xrealloc(path,pathsize=(<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1024</span>));</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (fflag &amp;&amp; !<span class=\"built_in\">strcmp</span>(d,<span class=\"string\">\"/\"</span>)) <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s%s\"</span>,d,(*dir)-&gt;lnk);</span><br><span class=\"line\">          <span class=\"keyword\">else</span> <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s/%s\"</span>,d,(*dir)-&gt;lnk);</span><br><span class=\"line\">          listdir(path,dt,ft,lev+<span class=\"number\">1</span>,dev);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        nlf = TRUE;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!(xdev &amp;&amp; dev != (*dir)-&gt;dev)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">2</span> &gt; pathsize) path=xrealloc(path,pathsize=(<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1024</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fflag &amp;&amp; !<span class=\"built_in\">strcmp</span>(d,<span class=\"string\">\"/\"</span>)) <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s/%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">    saveino((*dir)-&gt;inode, (*dir)-&gt;dev);</span><br><span class=\"line\">    listdir(path,dt,ft,lev+<span class=\"number\">1</span>,dev);</span><br><span class=\"line\">    nlf = TRUE;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      *dt += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> *ft += <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (*(dir+<span class=\"number\">1</span>) &amp;&amp; !*(dir+<span class=\"number\">2</span>)) dirs[lev] = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nlf) nlf = FALSE;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    dir++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  dirs[lev] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">free</span>(path);</span><br><span class=\"line\">  free_dir(sav);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">off_t</span> <span class=\"title\">unix_rlistdir</span><span class=\"params\">(<span class=\"keyword\">char</span> *d, <span class=\"keyword\">int</span> *dt, <span class=\"keyword\">int</span> *ft, u_long lev, <span class=\"keyword\">dev_t</span> dev)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">info</span> **<span class=\"title\">dir</span>;</span></span><br><span class=\"line\">  <span class=\"keyword\">off_t</span> <span class=\"built_in\">size</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *err;</span><br><span class=\"line\">  </span><br><span class=\"line\">  dir = getfulltree(d, lev, dev, &amp;<span class=\"built_in\">size</span>, &amp;err);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(dirs, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * maxdirs);</span><br><span class=\"line\"></span><br><span class=\"line\">  r_listdir(dir, d, dt, ft, lev);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">size</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">r_listdir</span><span class=\"params\">(struct _info **dir, <span class=\"keyword\">char</span> *d, <span class=\"keyword\">int</span> *dt, <span class=\"keyword\">int</span> *ft, u_long lev)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *path;</span><br><span class=\"line\">  <span class=\"keyword\">long</span> pathsize = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">info</span> **<span class=\"title\">sav</span> = <span class=\"title\">dir</span>;</span></span><br><span class=\"line\">  <span class=\"keyword\">bool</span> nlf = FALSE, colored = FALSE;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> c;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (dir == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  dirs[lev] = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!*(dir+<span class=\"number\">1</span>)) dirs[lev] = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  path = <span class=\"built_in\">malloc</span>(pathsize=<span class=\"number\">4096</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span>(*dir) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!noindent) indent(lev);</span><br><span class=\"line\">    </span><br><span class=\"line\">    fillinfo(path,*dir);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (path[<span class=\"number\">0</span>] == <span class=\"string\">' '</span>) &#123;</span><br><span class=\"line\">      path[<span class=\"number\">0</span>] = <span class=\"string\">'['</span>;</span><br><span class=\"line\">      <span class=\"built_in\">fprintf</span>(outfile, <span class=\"string\">\"%s]  \"</span>,path);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (colorize) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((*dir)-&gt;lnk &amp;&amp; linktargetcolor) colored = color((*dir)-&gt;lnkmode,(*dir)-&gt;name,(*dir)-&gt;orphan,FALSE);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> colored = color((*dir)-&gt;mode,(*dir)-&gt;name,(*dir)-&gt;orphan,FALSE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (fflag) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">2</span>) &gt; pathsize)</span><br><span class=\"line\">    path=xrealloc(path,pathsize=(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1024</span>)));</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!<span class=\"built_in\">strcmp</span>(d,<span class=\"string\">\"/\"</span>)) <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">      <span class=\"keyword\">else</span> <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s/%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1</span>) &gt; pathsize)</span><br><span class=\"line\">    path=xrealloc(path,pathsize=(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) * (<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1024</span>)));</span><br><span class=\"line\">      <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s\"</span>,(*dir)-&gt;name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    printit(path);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (colored) <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"%s\"</span>,endcode);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Fflag &amp;&amp; !(*dir)-&gt;lnk) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((c = Ftype((*dir)-&gt;mode))) fputc(c, outfile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((*dir)-&gt;lnk) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\" -&gt; \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (colorize) colored = color((*dir)-&gt;lnkmode,(*dir)-&gt;lnk,(*dir)-&gt;orphan,TRUE);</span><br><span class=\"line\">      printit((*dir)-&gt;lnk);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (colored) <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"%s\"</span>,endcode);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (Fflag) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((c = Ftype((*dir)-&gt;lnkmode))) fputc(c, outfile);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((*dir)-&gt;err) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\" [%s]\"</span>, (*dir)-&gt;err);</span><br><span class=\"line\">      <span class=\"built_in\">free</span>((*dir)-&gt;err);</span><br><span class=\"line\">      (*dir)-&gt;err = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((*dir)-&gt;child) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (fflag) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">2</span> &gt; pathsize) path=xrealloc(path,pathsize=(<span class=\"built_in\">strlen</span>(d)+<span class=\"built_in\">strlen</span>((*dir)-&gt;name)+<span class=\"number\">1024</span>));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">strcmp</span>(d,<span class=\"string\">\"/\"</span>)) <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">sprintf</span>(path,<span class=\"string\">\"%s/%s\"</span>,d,(*dir)-&gt;name);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      r_listdir((*dir)-&gt;child, fflag? path : <span class=\"literal\">NULL</span>, dt, ft, lev+<span class=\"number\">1</span>);</span><br><span class=\"line\">      nlf = TRUE;</span><br><span class=\"line\">      *dt += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ((*dir)-&gt;isdir) *dt += <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">else</span> *ft += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (*(dir+<span class=\"number\">1</span>) &amp;&amp; !*(dir+<span class=\"number\">2</span>)) dirs[lev] = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nlf) nlf = FALSE;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">fprintf</span>(outfile,<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    dir++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  dirs[lev] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">free</span>(path);</span><br><span class=\"line\">  free_dir(sav);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Linux",
                "tree"
            ]
        }
    ]
}