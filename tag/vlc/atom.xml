<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.iakmai.com</id>
    <title>KAIIAK • Posts by &#34;vlc&#34; tag</title>
    <link href="https://blog.iakmai.com" />
    <updated>2015-11-19T13:08:23.000Z</updated>
    <category term="GOLANG" />
    <category term="DOCKER" />
    <category term="Linux" />
    <category term="APUE" />
    <category term="随笔" />
    <category term="C" />
    <category term="ACM" />
    <category term="ZOJ" />
    <category term="vim" />
    <category term="YouCompleteMe" />
    <category term="Eclipse" />
    <category term="PyDev" />
    <category term="SMTP" />
    <category term="FFMPEG" />
    <category term="NSQ" />
    <category term="sqlite" />
    <category term="tree" />
    <category term="vlc" />
    <category term="CSharp" />
    <category term="Python" />
    <category term="树莓派" />
    <category term="PRI.GPIO" />
    <category term="Xshell" />
    <category term="openWRT" />
    <category term="lirc" />
    <category term="Hexo主题" />
    <category term="pylirc" />
    <entry>
        <id>https://blog.iakmai.com/2015/11/19/using-vlclib-in-vs/</id>
        <title>C#利用VLC播放网络串流</title>
        <link rel="alternate" href="https://blog.iakmai.com/2015/11/19/using-vlclib-in-vs/"/>
        <content type="html">&lt;p&gt;&lt;a href=&#34;http://www.videolan.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VLC的官方网站&lt;/a&gt;，VLC的源代码是用C语言实现的。我们这里用&lt;code&gt;C#&lt;/code&gt;的封装——nVLC。&lt;br&gt;&lt;a href=&#34;http://www.codeproject.com/Articles/109639/nVLC&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;nVLC&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;&lt;a href=&#34;#开始&#34; class=&#34;headerlink&#34; title=&#34;开始&#34;&gt;&lt;/a&gt;开始&lt;/h2&gt;&lt;p&gt;在运行本程序之前，请先安装VLC，或者拷贝&lt;code&gt;libvlc.dll&lt;/code&gt;、&lt;code&gt;libvlccode.dll&lt;/code&gt;和&lt;code&gt;plugins目录&lt;/code&gt;到你的&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;using System;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using System.Windows.Forms;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using Declarations;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using Declarations.Enums;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using Declarations.Media;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using Declarations.Players;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using Implementation;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;namespace nVLC_Demo_MemoryInputOutput&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public partial class Form1 : Form&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        IMediaPlayerFactory m_factory;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        IVideoPlayer m_sourcePlayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        IVideoPlayer m_renderPlayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        IMemoryInputMedia m_inputMedia;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        const long MicroSecondsInSecomd &amp;#x3D; 1000 * 1000;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        long MicroSecondsBetweenFrame;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        long frameCounter;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        FrameData data &amp;#x3D; new FrameData() &amp;#123; DTS &amp;#x3D; -1 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        const int DefaultFps &amp;#x3D; 24;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Timer timer &amp;#x3D; new Timer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        public Form1()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            InitializeComponent();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            timer.Tick +&amp;#x3D; new EventHandler(timer_Tick);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            timer.Interval &amp;#x3D; 1000;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        void timer_Tick(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            this.Text &amp;#x3D; m_inputMedia.PendingFramesCount.ToString();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        protected override void OnLoad(EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            base.OnLoad(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_factory &amp;#x3D; new MediaPlayerFactory(true);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_sourcePlayer &amp;#x3D; m_factory.CreatePlayer&amp;lt;IVideoPlayer&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_sourcePlayer.Events.PlayerPlaying +&amp;#x3D; new EventHandler(Events_PlayerPlaying);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_sourcePlayer.Mute &amp;#x3D; true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_renderPlayer &amp;#x3D; m_factory.CreatePlayer&amp;lt;IVideoPlayer&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_renderPlayer.WindowHandle &amp;#x3D; panel1.Handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_inputMedia &amp;#x3D; m_factory.CreateMedia&amp;lt;IMemoryInputMedia&amp;gt;(MediaStrings.IMEM);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            SetupOutput(m_sourcePlayer.CustomRendererEx);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        void Events_PlayerPlaying(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MicroSecondsBetweenFrame &amp;#x3D; (long)(MicroSecondsInSecomd &amp;#x2F; (m_sourcePlayer.FPS !&amp;#x3D; 0 ? m_sourcePlayer.FPS : DefaultFps));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        private void SetupOutput(IMemoryRendererEx iMemoryRenderer)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            iMemoryRenderer.SetFormatSetupCallback(OnSetupCallback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            iMemoryRenderer.SetExceptionHandler(OnErrorCallback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            iMemoryRenderer.SetCallback(OnNewFrameCallback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        private BitmapFormat OnSetupCallback(BitmapFormat format)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            SetupInput(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return new BitmapFormat(format.Width, format.Height, ChromaType.RV24);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        private void OnErrorCallback(Exception error)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MessageBox.Show(error.Message);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        private void OnNewFrameCallback(PlanarFrame frame)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;          &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            data.Data &amp;#x3D; frame.Planes[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            data.DataSize &amp;#x3D; frame.Lenghts[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            data.PTS &amp;#x3D; frameCounter++ * MicroSecondsBetweenFrame;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_inputMedia.AddFrame(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (&amp;#x2F;*m_inputMedia.PendingFramesCount &amp;#x3D;&amp;#x3D; 10 &amp;amp;&amp;amp; *&amp;#x2F;!m_renderPlayer.IsPlaying)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                m_renderPlayer.Play();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        private void SetupInput(BitmapFormat format)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            var streamInfo &amp;#x3D; new StreamInfo();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            streamInfo.Category &amp;#x3D; StreamCategory.Video;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            streamInfo.Codec &amp;#x3D; VideoCodecs.BGR24;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            streamInfo.Width &amp;#x3D; format.Width;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            streamInfo.Height &amp;#x3D; format.Height;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            streamInfo.Size &amp;#x3D; format.ImageSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_inputMedia.Initialize(streamInfo);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_inputMedia.SetExceptionHandler(OnErrorCallback);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_renderPlayer.Open(m_inputMedia);           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        private void OpenSourceMedia(string path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#x2F;&amp;#x2F;IMediaFromFile media &amp;#x3D; m_factory.CreateMedia&amp;lt;IMediaFromFile&amp;gt;(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            IMedia media &amp;#x3D; m_factory.CreateMedia&amp;lt;IMedia&amp;gt;(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_sourcePlayer.Open(media);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m_sourcePlayer.Play();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            timer.Start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        private void button1_Click(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            OpenSourceMedia(&amp;quot;http:&amp;#x2F;&amp;#x2F;192.168.2.108:8090&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="vlc" />
        <category term="CSharp" />
        <updated>2015-11-19T13:08:23.000Z</updated>
    </entry>
</feed>
