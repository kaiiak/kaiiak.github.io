{
    "version": "https://jsonfeed.org/version/1",
    "title": "KAIIAK • All posts by \"pylirc\" tag",
    "description": null,
    "home_page_url": "https://blog.iakmai.com",
    "items": [
        {
            "id": "https://blog.iakmai.com/2015/11/14/%E9%80%9A%E8%BF%87pylirc%E5%AE%9E%E7%8E%B0%E7%BA%A2%E5%A4%96%E6%8E%A7%E5%88%B6/",
            "url": "https://blog.iakmai.com/2015/11/14/%E9%80%9A%E8%BF%87pylirc%E5%AE%9E%E7%8E%B0%E7%BA%A2%E5%A4%96%E6%8E%A7%E5%88%B6/",
            "title": "通过pylirc实现红外控制",
            "date_published": "2015-11-14T12:39:40.000Z",
            "content_html": "<h2 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h2><p>在2005年更新的官方文档，点击<a href=\"http://bazaar.launchpad.net/~rockstar/pylirc2/trunk/view/head:/doc/simple.txt\" target=\"_blank\" rel=\"noopener\">这里</a>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyLirc v0.0.5</span><br><span class=\"line\"></span><br><span class=\"line\">Introduction</span><br><span class=\"line\"></span><br><span class=\"line\">pyLirc is a module for Python that interacts with lirc to give </span><br><span class=\"line\">Python programs the ability to receive commands from remote </span><br><span class=\"line\">controls.</span><br><span class=\"line\"></span><br><span class=\"line\">This isn&#39;t much of documentation, but at least it&#39;s a start and</span><br><span class=\"line\">there isn&#39;t much to document right now anyway.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Initialization</span><br><span class=\"line\"></span><br><span class=\"line\">Before you can receive any commands from lirc, you&#39;ll need to </span><br><span class=\"line\">initialize the module. After importing pyLirc, call the pylirc.init()</span><br><span class=\"line\">function:</span><br><span class=\"line\"></span><br><span class=\"line\">   import pylirc</span><br><span class=\"line\"></span><br><span class=\"line\">   integer &#x3D; pylirc.init(string name[, string configuration [, integer blocking ]])</span><br><span class=\"line\"></span><br><span class=\"line\">the returnvalue is the returnvalue of lircs client library</span><br><span class=\"line\">lirc_init(), ie a socket, or zero on failure.</span><br><span class=\"line\"></span><br><span class=\"line\">The socket can be used with select.select() to wait for data if you don&#39;t</span><br><span class=\"line\">want to use blocking. This is especially useful in multithreaded programs</span><br><span class=\"line\">as blocking mode of pylirc will blick all threads, whereas select() will</span><br><span class=\"line\">only block the current and with optional timeout.</span><br><span class=\"line\"></span><br><span class=\"line\">name: the name used for your program in the lirc configuration</span><br><span class=\"line\">file, must be supplied.</span><br><span class=\"line\"></span><br><span class=\"line\">configuration:  a filename to a lirc configuration file in case you wish not to</span><br><span class=\"line\">use lircs default configuration file (usually ~&#x2F;.lircrc).</span><br><span class=\"line\"></span><br><span class=\"line\">blocking: a flag indicating wether you want blocking mode or not. See also </span><br><span class=\"line\">blocking() and select.select() (latter in python docs)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Polling</span><br><span class=\"line\"></span><br><span class=\"line\">If initialization was ok, you can poll lirc for commands. To read any commands</span><br><span class=\"line\">in queue call pylirc.nextcode():</span><br><span class=\"line\"></span><br><span class=\"line\">   list &#x3D; pylirc.nextcode([integer Exteneded])</span><br><span class=\"line\"></span><br><span class=\"line\">The returnvalue is &#39;None&#39;, if no commands was on the queue, or a list</span><br><span class=\"line\">containing the commands read.</span><br><span class=\"line\"></span><br><span class=\"line\">To get the commands one by one enumerate the list:</span><br><span class=\"line\"></span><br><span class=\"line\">   for code in list:</span><br><span class=\"line\">      print code</span><br><span class=\"line\"></span><br><span class=\"line\">If you supply the optional argument Extended as true, code will be a dictionary</span><br><span class=\"line\">otherwise it will be a string (old behaviour).</span><br><span class=\"line\"></span><br><span class=\"line\">The dictionary currently contains:</span><br><span class=\"line\">&quot;config&quot;: The config string from lirc config file - the same string you&#39;d get in</span><br><span class=\"line\">          non-extended mode.</span><br><span class=\"line\">&quot;repeat&quot;: The repeat count of the buttonpress.</span><br><span class=\"line\">      </span><br><span class=\"line\">Note, that there can still be more commands on queue after a call</span><br><span class=\"line\">to pylirc.nextcode(). You should call it in a loop until you get</span><br><span class=\"line\">&#39;None&#39; back.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Exiting</span><br><span class=\"line\"></span><br><span class=\"line\">When you&#39;re done using pyLirc and before you exit your program you</span><br><span class=\"line\">should clean up:</span><br><span class=\"line\"></span><br><span class=\"line\">   pylirc.exit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Changing mode</span><br><span class=\"line\"></span><br><span class=\"line\">When you initialize pyLirc, you can chose wether you want blocking or</span><br><span class=\"line\">non-blocking mode. Blocking mode means pylirc.nextcode() waits until</span><br><span class=\"line\">there is a command to be read until it returns.</span><br><span class=\"line\">To change mode after initialization, use blocking():</span><br><span class=\"line\"></span><br><span class=\"line\">   success &#x3D; pylirc.blocking(int)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"中文翻译\"><a href=\"#中文翻译\" class=\"headerlink\" title=\"中文翻译\"></a>中文翻译</h2><p>自己尝试翻译一下，英语渣渣，有不正确的地方请指正。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyLirc v0.0.5</span><br><span class=\"line\"></span><br><span class=\"line\">介绍</span><br><span class=\"line\"></span><br><span class=\"line\">pyLirc是一个与LIRC交互给</span><br><span class=\"line\">Python程序从远程接收远程命令的能力</span><br><span class=\"line\">的Python模块。</span><br><span class=\"line\"></span><br><span class=\"line\">这是没有太多的文档，毕竟它是一个新项目，</span><br><span class=\"line\">现在反正没有太多的文档。</span><br><span class=\"line\"></span><br><span class=\"line\">初始化</span><br><span class=\"line\"></span><br><span class=\"line\">在接受来自lirc的命令之前，你应该初始化本模块。在 import pylirc之后，使用 pylirc.inti()函数：</span><br><span class=\"line\">\timport pylirc</span><br><span class=\"line\">\tinteger &#x3D; pylirc.init(string name[, string configuration [, integer blocking ]])</span><br><span class=\"line\">返回值是客户端库中lirc_init()函数的返回值，是一个socket，如果返回值是0，则初始化失败。</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pylirc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Buttons</span>:</span></span><br><span class=\"line\">    SELECT = <span class=\"number\">0</span></span><br><span class=\"line\">    RIGHT = <span class=\"number\">1</span></span><br><span class=\"line\">    DOWN = <span class=\"number\">2</span></span><br><span class=\"line\">    UP = <span class=\"number\">3</span></span><br><span class=\"line\">    LEFT = <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, app, conf)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> pylirc.init(app, conf, <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">\"Unable to init pylirc\"</span>);</span><br><span class=\"line\">        pylirc.blocking(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">readButton</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        btn = pylirc.nextcode()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> btn:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> btn[<span class=\"number\">0</span>]</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br></pre></td></tr></table></figure>",
            "tags": [
                "树莓派",
                "pylirc"
            ]
        }
    ]
}