{
    "version": "https://jsonfeed.org/version/1",
    "title": "KAIIAK • All posts by \"pri.gpio\" tag",
    "description": null,
    "home_page_url": "https://blog.iakmai.com",
    "items": [
        {
            "id": "https://blog.iakmai.com/2015/10/18/%E4%BD%BF%E7%94%A8Python%E6%8E%A7%E5%88%B6%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84GPIO-1/",
            "url": "https://blog.iakmai.com/2015/10/18/%E4%BD%BF%E7%94%A8Python%E6%8E%A7%E5%88%B6%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84GPIO-1/",
            "title": "使用Python控制树莓派的GPIO(1)",
            "date_published": "2015-10-18T09:19:07.000Z",
            "content_html": "<h3 id=\"使用的树莓派2B\"><a href=\"#使用的树莓派2B\" class=\"headerlink\" title=\"使用的树莓派2B\"></a>使用的树莓派2B</h3><p>通过PRI.GPIO来实现Python控制树莓派的GPIO。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>在<a href=\"http://pythonhosted.org/RPIO/\" target=\"_blank\" rel=\"noopener\">官方文档</a>中给出了三种按章方式。分别是</p>\n<h3 id=\"用-easy-install或者pip来安装：\"><a href=\"#用-easy-install或者pip来安装：\" class=\"headerlink\" title=\"用 easy_install或者pip来安装：\"></a>用 <code>easy_install</code>或者<code>pip</code>来安装：</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-setuptools</span><br><span class=\"line\">sudo easy_install -U RPIO</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"从Github上克隆然后安装\"><a href=\"#从Github上克隆然后安装\" class=\"headerlink\" title=\"从Github上克隆然后安装\"></a>从Github上克隆然后安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/metachris/RPIO.git</span><br><span class=\"line\">cd RPIO</span><br><span class=\"line\">sudo python setup.py install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"从Github或者别处下载安装\"><a href=\"#从Github或者别处下载安装\" class=\"headerlink\" title=\"从Github或者别处下载安装\"></a>从Github或者别处下载安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://github.com/metachris/RPIO/archive/master.tar.gz | tar -xz</span><br><span class=\"line\">cd RPIO-master</span><br><span class=\"line\">sudo python setup.py install</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p><img src=\"http://ww1.sinaimg.cn/mw690/ae94c92cgw1ex5fscddh0j20fi0bigqz.jpg\" alt=\"树莓派引脚图\"><br><img src=\"http://ww3.sinaimg.cn/mw690/ae94c92cgw1ex6qv7sjpoj20jq0c6gps.jpg\" alt=\"树莓派2B引脚图\"></p>\n<p>这是用wiringPi生成的引脚图，用wiringPi控制GPIO会在以后写。</p>\n<p>树莓派的GPIO大致可以分为INPUT和OUTPUT两种状态。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> RPIO</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置为输入位无上拉</span></span><br><span class=\"line\">RPIO.setup(<span class=\"number\">7</span>, RPIO.IN)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置为输出位有上拉. 可以设置为</span></span><br><span class=\"line\"><span class=\"comment\"># PUD_UP(上拉), PUD_DOWN(下拉) or PUD_OFF (default)</span></span><br><span class=\"line\">RPIO.setup(<span class=\"number\">7</span>, RPIO.IN, pull_up_down=RPIO.PUD_UP)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取GPIO7的输入状态</span></span><br><span class=\"line\">input_value = RPIO.input(<span class=\"number\">7</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置GPIO为输出位</span></span><br><span class=\"line\">RPIO.setup(<span class=\"number\">8</span>, RPIO.OUT)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置GPIO8为高电位</span></span><br><span class=\"line\">RPIO.output(<span class=\"number\">8</span>, <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置为输出位并给予一个初始值</span></span><br><span class=\"line\">RPIO.setup(<span class=\"number\">8</span>, RPIO.OUT, initial=RPIO.LOW)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 改变为BOARD编号模式</span></span><br><span class=\"line\">RPIO.setmode(RPIO.BOARD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在通道17上设置软件上拉</span></span><br><span class=\"line\">RPIO.set_pullupdn(<span class=\"number\">17</span>, RPIO.PUD_UP)  <span class=\"comment\"># new in RPIO</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获得通道8的设置(IN、OUT、ALTo)</span></span><br><span class=\"line\">RPIO.gpio_function(<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复位所有由该程序设置过的通道，</span></span><br><span class=\"line\"><span class=\"comment\"># 并清除 GPIO 中断接口</span></span><br><span class=\"line\">RPIO.cleanup()</span><br></pre></td></tr></table></figure>\n\n<p>照着上一篇文章写的那样做，并不能成功。因为RPIO的最后一个release版本是2013年的，并不支持我的树莓派2B。</p>\n<p>如果想在树莓派2B上运行，需要做这些工作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install rpi.gpio</span><br><span class=\"line\">sudo pip freeze</span><br></pre></td></tr></table></figure>\n<p>如果有一行<code>RPi.GPIO==0.511</code>就说明安装成功了。</p>\n<p>然后我们在新建<code>led.py</code>：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> RPi.GPIO <span class=\"keyword\">as</span> GPIO</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">LED = <span class=\"number\">4</span> </span><br><span class=\"line\"></span><br><span class=\"line\">GPIO.setmode(GPIO.BCM)</span><br><span class=\"line\">GPIO.setup(LED, GPIO.OUT)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"结束程序，请按CTRL+C\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">\t\tGPIO.output(LED, <span class=\"literal\">False</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">#延时1s</span></span><br><span class=\"line\">\t\ttime.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\tGPIO.output(LED, <span class=\"literal\">True</span>)</span><br><span class=\"line\">\t\ttime.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> KeyboardInterrupt: <span class=\"comment\"># 如果程序被CTRL+C结束</span></span><br><span class=\"line\">\tGPIO.cleanup()</span><br></pre></td></tr></table></figure>\n\n<p>前几天搞不懂GPIO.setmode函数中的参数GPIO.BCM和GPIO.BOARD指的是什么。<br>后来知道BOARD指的是主板引脚编号，而BCM指的是BCM芯片的引脚编号，在本文的配图中有。</p>\n",
            "tags": [
                "Python",
                "树莓派",
                "PRI.GPIO"
            ]
        }
    ]
}